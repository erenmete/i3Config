#!/usr/bin/env bash

#------------------------------------------------------------------------------
# Project Name      - i3Config/source/.i3a/term_font_size
# Started On        - Mon 30 Oct 15:14:16 GMT 2017
# Last Change       - Tue 15 Mar 23:23:49 GMT 2022
# Author E-Mail     - terminalforlife@yahoo.com
# Author GitHub     - https://github.com/terminalforlife
#------------------------------------------------------------------------------
# features:
#
# n/a
#
# bugs:
#
#TODO: Running this script too frequently (extremely) corrupts file.
#
# dependencies:
#
#   bash (>= 3.2.48)
#------------------------------------------------------------------------------

CurVer='2022-03-15'
Progrm='term_font_size'

Usage() {
	read -d '' <<-EOF
		Usage: $Progrm [OPTS]

		  -h, --help               - Displays this help information.
		  -v, --version            - Output only the version datestamp.
		  -l, --lower [N]          - Lower font size by N.
		  -q, --quiet              - Quieter operation, with errors.
		  -r, --raise [N]          - Raise font size by N.
		  -s, --set [N]            - Set font size to N.

		NOTE: This tool only supports xfce4-terminal(1) and alacritty(1).
	EOF

	printf '%s' "$REPLY"
}

Err() {
	printf 'Err: %s\n' "$2" 1>&2
	(( $1 > 0 )) && exit $1
}

Configs=(
	"$HOME/.config/alacritty/alacritty.yml"
	"$HOME/.config/xfce4/terminal/terminalrc"
)

(( $# == 0 )) && Err 1 'Argument(s) required.'

while [[ -n $1 ]]; do
	case $1 in
		--help|-h|-\?)
			Usage; exit 0 ;;
		--version|-v)
			printf '%s\n' "$CurVer"; exit 0 ;;
		--raise|-r)
			if [[ -z $2 ]]; then
				Err 1 "Option '$1' requires an argument."
			elif ! [[ $2 =~ ^[0-9]+$ ]]; then
				Err 1 "Option '$1' given invalid expression."
			else
				Raise=$2
				shift
			fi ;;
		--lower|-l)
			if [[ -z $2 ]]; then
				Err 1 "Option '$1' requires an argument."
			elif ! [[ $2 =~ ^[0-9]+$ ]]; then
				Err 1 "Option '$1' given invalid expression."
			else
				Lower=$2
				shift
			fi ;;
		--set|-s)
			if [[ -z $2 ]]; then
				Err 1 "Option '$1' requires an argument."
			elif ! [[ $2 =~ ^[0-9]+$ ]]; then
				Err 1 "Option '$1' given invalid expression."
			else
				SetTo=$2
				shift
			fi ;;
		*)
			Err 1 'Incorrect argument(s) specified' ;;
	esac
	shift
done

if type -P alacritty &> /dev/null; then
	if [[ -f ${Configs[0]} ]]; then
		if [[ -r ${Configs[0]} ]]; then
			while read -r; do
				if [[ $FoundFonts == True ]]; then
					if [[ $REPLY == +( )*size:\ *+([0-9]) ]]; then
						Pre=${REPLY%%+([0-9])}
						Now=${REPLY##*+( )}
						if [[ -n $Raise ]]; then
							Output+=("$Pre$(( Now + Raise ))")
						elif [[ -n $Lower ]]; then
							Output+=("$Pre$(( Now - Lower ))")
						elif [[ -n $SetTo ]]; then
							Output+=("$Pre$SetTo")
						fi

						FoundFonts='False'
						NoMatch='True'
					else
						Output+=("$REPLY")
					fi
				elif [[ $NoMatch != True && $REPLY == font: ]]; then
					Output+=("$REPLY")
					FoundFonts='True'
				else
					Output+=("$REPLY")
				fi
			done < "${Configs[0]}"

			if [[ -w ${Configs[0]} ]]; then
				printf '%s\n' "${Output[@]}" > "${Configs[0]}"
			else
				Err 1 "File '${Configs[0]}' unwritable."
			fi
		else
			Err 1 "File '${Configs[0]}' unreadable."
		fi
	else
		Err 1 "File '${Configs[1]}' not found."
	fi
elif type -P xfce4-terminal &> /dev/null; then
	if [[ -f ${Configs[1]} ]]; then
		if [[ -r ${Configs[1]} ]]; then
			while read -r; do
				if [[ $REPLY == FontName=* ]]; then
					Pre=${REPLY% *}
					Now=${REPLY##* }
					if [[ -n $Raise ]]; then
						Output+=("$Pre $(( Now + Raise ))")
					elif [[ -n $Lower ]]; then
						Output+=("$Pre $(( Now - Lower ))")
					elif [[ -n $SetTo ]]; then
						Output+=("$Pre $SetTo")
					fi
				else
					Output+=("$REPLY")
				fi
			done < "${Configs[1]}"

			if [[ -w ${Configs[1]} ]]; then
				printf '%s\n' "${Output[@]}" > "${Configs[1]}"
			else
				Err 1 "File '${Configs[1]}' unwritable."
			fi
		else
			Err 1 "File '${Configs[1]}' unreadable."
		fi
	else
		Err 1 "File '${Configs[1]}' not found."
	fi
fi
